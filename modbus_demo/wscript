#-                                                                                                                                                                                                                                                                                                                [218/1103]# SPDX-License-Identifier: BSD-2-Clause
#
# Copyright (c) 2020 Hesham Almatary
#
# This software was developed by SRI International and the University of
# Cambridge Computer Laboratory (Department of Computer Science and
# Technology) under DARPA contract HR0011-18-C-0016 ("ECATS"), as part of the
# DARPA SSITH research programme.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#


def configure(ctx):
    print("Configuring modbus Demo @", ctx.path.abspath())

    ctx.env.append_value('INCLUDES', [
        ctx.path.abspath(),
        ctx.path.abspath() + '/include',
        ctx.path.abspath() + '/libmodbus/src/',
        ctx.path.abspath() + '/libmodbus/include/',
        ctx.path.abspath() + '/libmacaroons/include/',
        ctx.path.abspath() + '/libmodbus_cheri/include/',
        ctx.path.abspath() + '/libmodbus_macaroons/include/',
    ])

    ctx.env.append_value('DEFINES', [
        'configPROG_ENTRY                   = main_modbus',
        'configCUSTOM_HEAP_SIZE             = 2',
    ])

    ctx.env.append_value('LIB_DEPS', ['freertos_tcpip', 'virtio'])


def build(bld):
    print("Building modbus Demo")

    LIBMACAROONS_DIR = 'libmacaroons/'
    LIBMODBUS_DIR = 'libmodbus/'
    LIBMODBUS_CHERI_DIR = 'libmodbus_cheri/'
    LIBMODBUS_MACAROONS_DIR = 'libmodbus_macaroons/'
    LIBMACAROONS_DIR = 'libmacaroons/'

    bld.stlib(features=['c'],
              source=[
                  LIBMODBUS_DIR + 'src/modbus.c',
                  LIBMODBUS_DIR + 'src/modbus-data.c',
                  LIBMODBUS_DIR + 'src/modbus-tcp.c',
                  LIBMODBUS_DIR + 'src/modbus-helpers.c'
              ],
              use=[
                  "freertos_core",
                  "freertos_bsp",
                  "freertos_tcpip",
              ],
              target="modbus")

    bld.stlib(features=['c'],
              source=[LIBMODBUS_CHERI_DIR + 'src/modbus_cheri.c'],
              use=[
                  "freertos_core",
                  "freertos_bsp",
                  "freertos_tcpip",
              ],
              defines=bld.env.DEFINES + ['CHERI_LAYER=1'],
              target="modbus_cheri")

    bld.stlib(features=['c'],
              source=[LIBMODBUS_MACAROONS_DIR + 'src/modbus_macaroons.c'],
              use=[
                  "freertos_core",
                  "freertos_bsp",
                  "freertos_tcpip",
              ],
              target="modbus_macaroons")

    bld.stlib(
        features=['c'],
        source=[
            LIBMACAROONS_DIR + 'src/base64.c',
            LIBMACAROONS_DIR + 'src/explicit_bzero.c',
            LIBMACAROONS_DIR + 'src/macaroons.c',
            LIBMACAROONS_DIR + 'src/packet.c', LIBMACAROONS_DIR + 'src/port.c',
            LIBMACAROONS_DIR + 'src/sha256.c', LIBMACAROONS_DIR + 'src/shim.c',
            LIBMACAROONS_DIR + 'src/slice.c',
            LIBMACAROONS_DIR + 'src/timingsafe_bcmp.c',
            LIBMACAROONS_DIR + 'src/tweetnacl.c',
            LIBMACAROONS_DIR + 'src/v1.c', LIBMACAROONS_DIR + 'src/v2.c',
            LIBMACAROONS_DIR + 'src/varint.c'
        ],
        use=[
            "freertos_core",
            "freertos_bsp",
        ],
        target="macaroons")

    bld.stlib(features=['c'],
            source=[
                'main_modbus.c',
                'modbus_server.c',
                'modbus_client.c'
            ],
            use=[
                "freertos_core",
                "freertos_bsp",
                "modbus",
            ],
            target="modbus_baseline")

    bld.stlib(features=['c'],
            source=[
                'main_modbus.c',
                'modbus_server.c',
                'modbus_client.c',
                'microbenchmark.c'
            ],
            use=[
                "freertos_core",
                "freertos_bsp",
                "freertos_tcpip",
                "modbus"
            ],
            defines=bld.env.DEFINES + ['NDEBUG=1', 'MICROBENCHMARK=1'],
            target="modbus_baseline_microbenchmark")

    bld.stlib(features=['c'],
            source=[
                'main_modbus.c',
                'modbus_server.c',
                'modbus_client.c'
            ],
            use=[
                "freertos_core",
                "freertos_bsp",
                "modbus",
                "modbus_cheri"
            ],
            defines=bld.env.DEFINES + ['CHERI_LAYER=1'],
            target="modbus_cheri_layer")

    bld.stlib(features=['c'],
            source=[
                'main_modbus.c',
                'modbus_server.c',
                'modbus_client.c',
                'microbenchmark.c'
            ],
            use=[
                "freertos_core",
                "freertos_bsp",
                "modbus",
                "modbus_cheri"
            ],
            defines=bld.env.DEFINES + [
                'NDEBUG=1',
                'CHERI_LAYER=1',
                'MICROBENCHMARK=1'
            ],
            target="modbus_cheri_layer_microbenchmark")

    bld.stlib(features=['c'],
            source=[
                'main_modbus.c',
                'modbus_server.c',
                'modbus_client.c'
            ],
            use=[
                "freertos_core",
                "freertos_bsp",
                "modbus",
                "modbus_macaroons",
                "macaroons"
            ],
            defines=bld.env.DEFINES + ['MACAROONS_LAYER=1'],
            target="modbus_macaroons_layer")

    bld.stlib(features=['c'],
            source=[
                'main_modbus.c',
                'modbus_server.c',
                'modbus_client.c',
                'microbenchmark.c'
            ],
            use=[
                "freertos_core",
                "freertos_bsp",
                "modbus",
                "modbus_macaroons",
                "macaroons"
            ],
            defines=bld.env.DEFINES + [
                'MACAROONS_LAYER=1',
                'MICROBENCHMARK=1',
                'NDEBUG=1'
            ],
            target="modbus_macaroons_layer_microbenchmark")

    bld.stlib(features=['c'],
            source=[
                'main_modbus.c',
                'modbus_server.c',
                'modbus_client.c'
            ],
            use=[
                "freertos_core",
                "freertos_bsp",
                "freertos_tcpip",
                "modbus",
                "modbus_macaroons",
                "macaroons",
                "modbus_cheri"
            ],
            defines=bld.env.DEFINES + ['MACAROONS_LAYER=1', 'CHERI_LAYER=1'],
            target="modbus_cheri_macaroons_layers")

    bld.stlib(features=['c'],
            source=[
                'main_modbus.c',
                'modbus_server.c',
                'modbus_client.c',
                'microbenchmark.c'
            ],
            use=[
                "freertos_core",
                "freertos_bsp",
                "freertos_tcpip",
                "modbus",
                "modbus_macaroons",
                "macaroons",
                "modbus_cheri"
            ],
            defines=bld.env.DEFINES + [
                'MACAROONS_LAYER=1',
                'CHERI_LAYER=1',
                'MICROBENCHMARK=1',
                'NDEBUG=1'
            ],
            target="modbus_cheri_macaroons_layers_microbenchmark")
